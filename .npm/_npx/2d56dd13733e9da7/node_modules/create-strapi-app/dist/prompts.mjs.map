{"version":3,"file":"prompts.mjs","sources":["../src/prompts.ts"],"sourcesContent":["import inquirer from 'inquirer';\n\nasync function directory() {\n  const { directory } = await inquirer.prompt<{\n    directory: string;\n  }>([\n    {\n      type: 'input',\n      default: 'my-strapi-project',\n      name: 'directory',\n      message: 'What is the name of your project?',\n    },\n  ]);\n\n  return directory;\n}\n\nasync function typescript() {\n  const { useTypescript } = await inquirer.prompt<{\n    useTypescript: boolean;\n  }>([\n    {\n      type: 'confirm',\n      name: 'useTypescript',\n      message: 'Start with Typescript?',\n      default: true,\n    },\n  ]);\n\n  return useTypescript;\n}\n\nasync function example() {\n  const { useExample } = await inquirer.prompt<{\n    useExample: boolean;\n  }>([\n    {\n      type: 'confirm',\n      name: 'useExample',\n      message: 'Start with an example structure & data?',\n      default: false,\n    },\n  ]);\n\n  return useExample;\n}\n\nasync function gitInit() {\n  const { gitInit } = await inquirer.prompt<{\n    gitInit: boolean;\n  }>([\n    {\n      type: 'confirm',\n      name: 'gitInit',\n      message: 'Initialize a git repository?',\n      default: true,\n    },\n  ]);\n\n  return gitInit;\n}\n\nasync function installDependencies(packageManager: string) {\n  const { installDependencies } = await inquirer.prompt<{\n    installDependencies: boolean;\n  }>([\n    {\n      type: 'confirm',\n      name: 'installDependencies',\n      message: `Install dependencies with ${packageManager}?`,\n      default: true,\n    },\n  ]);\n\n  return installDependencies;\n}\n\nexport { directory, typescript, example, gitInit, installDependencies };\n"],"names":["directory","inquirer","prompt","type","default","name","message","typescript","useTypescript","example","useExample","gitInit","installDependencies","packageManager"],"mappings":";;AAEA,eAAeA,SAAAA,GAAAA;AACb,IAAA,MAAM,EAAEA,SAAS,EAAE,GAAG,MAAMC,QAAAA,CAASC,MAAM,CAExC;AACD,QAAA;YACEC,IAAM,EAAA,OAAA;YACNC,OAAS,EAAA,mBAAA;YACTC,IAAM,EAAA,WAAA;YACNC,OAAS,EAAA;AACX;AACD,KAAA,CAAA;IAED,OAAON,SAAAA;AACT;AAEA,eAAeO,UAAAA,GAAAA;AACb,IAAA,MAAM,EAAEC,aAAa,EAAE,GAAG,MAAMP,QAAAA,CAASC,MAAM,CAE5C;AACD,QAAA;YACEC,IAAM,EAAA,SAAA;YACNE,IAAM,EAAA,eAAA;YACNC,OAAS,EAAA,wBAAA;YACTF,OAAS,EAAA;AACX;AACD,KAAA,CAAA;IAED,OAAOI,aAAAA;AACT;AAEA,eAAeC,OAAAA,GAAAA;AACb,IAAA,MAAM,EAAEC,UAAU,EAAE,GAAG,MAAMT,QAAAA,CAASC,MAAM,CAEzC;AACD,QAAA;YACEC,IAAM,EAAA,SAAA;YACNE,IAAM,EAAA,YAAA;YACNC,OAAS,EAAA,yCAAA;YACTF,OAAS,EAAA;AACX;AACD,KAAA,CAAA;IAED,OAAOM,UAAAA;AACT;AAEA,eAAeC,OAAAA,GAAAA;AACb,IAAA,MAAM,EAAEA,OAAO,EAAE,GAAG,MAAMV,QAAAA,CAASC,MAAM,CAEtC;AACD,QAAA;YACEC,IAAM,EAAA,SAAA;YACNE,IAAM,EAAA,SAAA;YACNC,OAAS,EAAA,8BAAA;YACTF,OAAS,EAAA;AACX;AACD,KAAA,CAAA;IAED,OAAOO,OAAAA;AACT;AAEA,eAAeC,oBAAoBC,cAAsB,EAAA;AACvD,IAAA,MAAM,EAAED,mBAAmB,EAAE,GAAG,MAAMX,QAAAA,CAASC,MAAM,CAElD;AACD,QAAA;YACEC,IAAM,EAAA,SAAA;YACNE,IAAM,EAAA,qBAAA;AACNC,YAAAA,OAAAA,EAAS,CAAC,0BAA0B,EAAEO,cAAAA,CAAe,CAAC,CAAC;YACvDT,OAAS,EAAA;AACX;AACD,KAAA,CAAA;IAED,OAAOQ,mBAAAA;AACT;;;;"}