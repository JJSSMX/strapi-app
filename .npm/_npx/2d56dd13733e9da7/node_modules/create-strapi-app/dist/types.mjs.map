{"version":3,"file":"types.mjs","sources":["../src/types.ts"],"sourcesContent":["export interface Options {\n  useNpm?: boolean;\n  usePnpm?: boolean;\n  useYarn?: boolean;\n  quickstart?: boolean;\n  run?: boolean;\n  dbclient?: DBClient;\n  skipCloud?: boolean;\n  skipDb?: boolean;\n  dbhost?: string;\n  dbport?: string;\n  dbname?: string;\n  dbusername?: string;\n  dbpassword?: string;\n  dbssl?: string;\n  dbfile?: string;\n  template?: string;\n  typescript?: boolean;\n  javascript?: boolean;\n  install?: boolean;\n  example?: boolean;\n  gitInit?: boolean;\n  templateBranch?: string;\n  templatePath?: string;\n}\n\nexport type DBClient = 'mysql' | 'postgres' | 'sqlite';\n\nexport type DBConfig = {\n  client: DBClient;\n  connection: {\n    host?: string;\n    port?: string;\n    database?: string;\n    username?: string;\n    password?: string;\n    filename?: string;\n    ssl?: boolean;\n  };\n};\n\nexport type PackageManager = 'npm' | 'yarn' | 'pnpm';\n\nexport interface Scope {\n  name: string;\n  rootPath: string;\n  template?: string;\n  templateBranch?: string;\n  templatePath?: string;\n  strapiVersion?: string;\n  installDependencies?: boolean;\n  devDependencies?: Record<string, string>;\n  dependencies?: Record<string, string>;\n  docker?: boolean;\n  packageManager: PackageManager;\n  runApp?: boolean;\n  isQuickstart?: boolean;\n  uuid?: string;\n  installId?: string;\n  database: DatabaseInfo;\n  tmpPath?: string;\n  packageJsonStrapi?: Record<string, unknown>;\n  useTypescript?: boolean;\n  useExample?: boolean;\n  gitInit?: boolean;\n}\n\nexport type ClientName = 'mysql' | 'postgres' | 'sqlite';\n\nexport interface DatabaseInfo {\n  client: ClientName;\n  connection?: {\n    host?: string;\n    port?: string;\n    database?: string;\n    username?: string;\n    password?: string;\n    filename?: string;\n    ssl?: boolean;\n  };\n}\n\nexport interface StderrError extends Error {\n  stderr: string;\n}\n\nexport function isStderrError(error: unknown): error is StderrError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'stderr' in error &&\n    typeof error.stderr === 'string'\n  );\n}\n"],"names":["isStderrError","error","stderr"],"mappings":"AAsFO,SAASA,cAAcC,KAAc,EAAA;IAC1C,OACE,OAAOA,KAAU,KAAA,QAAA,IACjBA,KAAU,KAAA,IAAA,IACV,YAAYA,KACZ,IAAA,OAAOA,KAAMC,CAAAA,MAAM,KAAK,QAAA;AAE5B;;;;"}